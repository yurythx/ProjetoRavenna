# =========================================================
# N8N - PLATAFORMA DE AUTOMAÇÃO DE FLUXOS DE TRABALHO
# =========================================================
# Versão: 1.113.3
# Descrição: Configuração unificada do N8N com seu próprio
#            PostgreSQL e Redis dedicados.
# =========================================================

services:
  # =========================================================
  # SERVIÇO: N8N UNIFICADO
  # =========================================================
  # Serviço único do N8N com interface web, webhooks e workers
  # Configurado com banco de dados e Redis próprios
  # =========================================================
  n8n:
    image: n8nio/n8n:1.113.3
    depends_on:
      - postgres_n8n
      - redis_n8n
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - tmp_data:/home/n8n/.tmp
    networks:
      - app_network
    restart: always
    env_file:
      - .env
    environment:
      # =========================================================
      # CONFIGURAÇÃO DE BANCO DE DADOS DEDICADO
      # =========================================================
      DB_TYPE: postgresdb
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_HOST: postgres_n8n
      DB_POSTGRESDB_DATABASE: n8n_fila
      DB_POSTGRESDB_USER: postgres
      DB_POSTGRESDB_PASSWORD: minha_senha_super_segura_2024!
      
      # =========================================================
      # CONFIGURAÇÃO DE SEGURANÇA E ACESSO
      # =========================================================
      N8N_ENCRYPTION_KEY: Y8Dmy5FhuRIDGIrs
      N8N_HOST: 192.168.0.121:5678
      N8N_EDITOR_BASE_URL: http://192.168.0.121:5678/
      N8N_PROTOCOL: http
      NODE_ENV: production
      WEBHOOK_URL: http://192.168.0.121:5678/
      
      # =========================================================
      # CONFIGURAÇÃO DE REDIS DEDICADO
      # =========================================================
      QUEUE_BULL_REDIS_HOST: redis_n8n
      QUEUE_BULL_REDIS_PORT: 6379
      QUEUE_BULL_REDIS_DB: 0
      
      # =========================================================
      # CONFIGURAÇÃO DE EXECUÇÃO
      # =========================================================
      EXECUTIONS_MODE: regular
      NODE_FUNCTION_ALLOW_EXTERNAL: moment,lodash,moment-with-locales
      EXECUTIONS_DATA_PRUNE: 'true'
      EXECUTIONS_DATA_MAX_AGE: 336
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: 'true'
      N8N_SECURE_COOKIE: "false"
    
    # =========================================================
    # CONFIGURAÇÃO DE RECURSOS E HEALTH CHECK
    # =========================================================
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5678/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # =========================================================
  # SERVIÇO: POSTGRESQL N8N
  # =========================================================
  # Banco de dados dedicado para o N8N
  # =========================================================
  postgres_n8n:
    image: postgres:16
    environment:
      POSTGRES_DB: n8n_fila
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: minha_senha_super_segura_2024!
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_n8n_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: always
    container_name: postgres_n8n
    ports:
      - "5433:5432"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d n8n_fila"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # =========================================================
  # SERVIÇO: REDIS N8N
  # =========================================================
  # Cache e filas dedicado para o N8N
  # =========================================================
  redis_n8n:
    image: redis:8.2-alpine
    command: redis-server --requirepass RedisRavenna2024!@#Cache456 --appendonly yes
    volumes:
      - redis_n8n_data:/data
    networks:
      - app_network
    restart: always
    container_name: redis_n8n
    ports:
      - "6381:6379"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a RedisRavenna2024!@#Cache456 ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# =========================================================
# VOLUMES
# =========================================================
# Configuração de volumes para persistência de dados
# =========================================================
volumes:
  n8n_data:                                # Volume para dados do N8N
  tmp_data:                                # Volume temporário para N8N
  postgres_n8n_data:                       # Volume para dados do PostgreSQL N8N
  redis_n8n_data:                          # Volume para dados do Redis N8N

# =========================================================
# NETWORKS
# =========================================================
# Configuração de rede para comunicação entre serviços
# =========================================================
networks:
  app_network:                            # Rede compartilhada entre todos os serviços
    driver: bridge